!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3f4203d/
<C-j>	.vimrc	/^nmap <silent> <C-j> <Plug>(ale_next_wrap)$/;"	m
<C-k>	.vimrc	/^nmap <silent> <C-k> <Plug>(ale_previous_wrap)$/;"	m
<C-n>	.vimrc	/^map <C-n> :NERDTreeToggle<CR>$/;"	m
<Esc>[200~	.vimrc	/^inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()$/;"	m
<F8>	.vimrc	/^nmap <F8> :TagbarToggle<CR>$/;"	m
<leader>b	.vimrc	/^map <leader>b :Buffers<cr> $/;"	m
<leader>bl	.vimrc	/^map <leader>bl :BLines<cr> $/;"	m
<leader>d	.vimrc	/^nmap <leader>d <Plug>(ale_fix)$/;"	m
<leader>f	.vimrc	/^map <leader>f :Files<cr> $/;"	m
<leader>h	.vimrc	/^map <leader>h :History<cr> $/;"	m
<leader>l	.vimrc	/^map <leader>l :Lines<cr> $/;"	m
<leader>vimrc	.vimrc	/^map <leader>vimrc :vsp $MYVIMRC<cr> $/;"	m
<leader>w	.vimrc	/^map <leader>w :Window<cr> $/;"	m
Bd	.vimrc	/^command! Bd bp|bd#$/;"	c
Bw	.vimrc	/^command! Bw w|bp|bd#$/;"	c
WrapForTmux	.vimrc	/^function! WrapForTmux(s)$/;"	f
XTermPasteBegin	.vimrc	/^function! XTermPasteBegin()$/;"	f
config	README.md	/^# config$/;"	c
dotspacemacs/emacs-custom-settings	.spacemacs.d/init.el	/^(defun dotspacemacs\/emacs-custom-settings ()$/;"	f
dotspacemacs/init	.spacemacs.d/init.el	/^(defun dotspacemacs\/init ()$/;"	f
dotspacemacs/layers	.spacemacs.d/init.el	/^(defun dotspacemacs\/layers ()$/;"	f
dotspacemacs/user-config	.spacemacs.d/init.el	/^(defun dotspacemacs\/user-config ()$/;"	f
dotspacemacs/user-env	.spacemacs.d/init.el	/^(defun dotspacemacs\/user-env ()$/;"	f
dotspacemacs/user-init	.spacemacs.d/init.el	/^(defun dotspacemacs\/user-init ()$/;"	f
dotspacemacs/user-load	.spacemacs.d/init.el	/^(defun dotspacemacs\/user-load ()$/;"	f
fd	.vimrc	/^inoremap fd <esc>$/;"	m
g:ackprg	.vimrc	/^let g:ackprg = 'ag --nogroup --nocolor --column'$/;"	v
g:ale_fix_on_save	.vimrc	/^let g:ale_fix_on_save = 1$/;"	v
g:ale_fixers	.vimrc	/^let g:ale_fixers = {$/;"	v
g:ale_ruby_rubocop_executable	.vimrc	/^let g:ale_ruby_rubocop_executable = 'bundle exec rubocop'$/;"	v
g:ale_sign_column_always	.vimrc	/^let g:ale_sign_column_always = 1$/;"	v
g:closetag_close_shortcut	.vimrc	/^let g:closetag_close_shortcut = '<leader>>'$/;"	v
g:closetag_emptyTags_caseSensitive	.vimrc	/^let g:closetag_emptyTags_caseSensitive = 1$/;"	v
g:closetag_filenames	.vimrc	/^let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.jsx,*.js'$/;"	v
g:closetag_shortcut	.vimrc	/^let g:closetag_shortcut = '>'$/;"	v
g:closetag_xhtml_filenames	.vimrc	/^let g:closetag_xhtml_filenames = '*.xhtml,*.jsx,*.js'$/;"	v
g:ctrlp_custom_ignore	.vimrc	/^let g:ctrlp_custom_ignore = {$/;"	v
g:ctrlp_use_caching	.vimrc	/^  let g:ctrlp_use_caching = 0$/;"	v
g:ctrlp_user_command	.vimrc	/^  let g:ctrlp_user_command = 'ag %s -l --hidden --nocolor -g ""'$/;"	v
g:ctrlp_working_path_mode	.vimrc	/^let g:ctrlp_working_path_mode = 'ra'$/;"	v
g:gitgutter_max_signs	.vimrc	/^let g:gitgutter_max_signs = 500  " default value$/;"	v
g:jsx_ext_required	.vimrc	/^let g:jsx_ext_required = 0$/;"	v
g:vue_disable_pre_processors	.vimrc	/^let g:vue_disable_pre_processors=1$/;"	v
ga	.vimrc	/^nmap ga <Plug>(EasyAlign)$/;"	m
ga	.vimrc	/^xmap ga <Plug>(EasyAlign)$/;"	m
gn	.vimrc	/^map gn :bn<CR>$/;"	m
gp	.vimrc	/^map gp :bp<CR>$/;"	m
